"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.onInitialClientRender = exports.wrapRootElement = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRedux = require("react-redux");

var _createStore = _interopRequireDefault(require("./.tmp/createStore"));

var _constants = require("./constants");

var wrapRootElement = function wrapRootElement(_ref, pluginOptions) {
  var _pluginOptions$window;

  var element = _ref.element;

  if (pluginOptions === void 0) {
    pluginOptions = {};
  }

  var preloadedState = window[(_pluginOptions$window = pluginOptions.windowKey) !== null && _pluginOptions$window !== void 0 ? _pluginOptions$window : _constants.DEFAULT_OPTIONS.windowKey];
  var store = (0, _createStore.default)(preloadedState);
  return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, element);
};

exports.wrapRootElement = wrapRootElement;

var onInitialClientRender = function onInitialClientRender(_, pluginOptions) {
  var _pluginOptions$cleanu;

  if (pluginOptions === void 0) {
    pluginOptions = {};
  }

  var shouldCleanup = Boolean((_pluginOptions$cleanu = pluginOptions.cleanupOnClient) !== null && _pluginOptions$cleanu !== void 0 ? _pluginOptions$cleanu : _constants.DEFAULT_OPTIONS.cleanupOnClient);

  if (shouldCleanup) {
    var _pluginOptions$window2;

    var windowKey = (_pluginOptions$window2 = pluginOptions.windowKey) !== null && _pluginOptions$window2 !== void 0 ? _pluginOptions$window2 : _constants.DEFAULT_OPTIONS.windowKey;
    delete window[windowKey];
    var preloadedStateEl = document.getElementById(_constants.SCRIPT_ELEMENT_ID);

    if (preloadedStateEl) {
      preloadedStateEl.parentNode.removeChild(preloadedStateEl);
    }
  }
};

exports.onInitialClientRender = onInitialClientRender;